name: Publish Next
on:
  release:
    types: [ prereleased ]

env:
  TAG_NAME: ${{ github.event.release.tag_name }}
  PACKAGE_VERSION: "" # to be filled later after checkout

jobs:
  publish:
    name: Publish next to npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: fill package version
        run: |
          PACKAGE_VERSION=$(jq -r '.version' packages/abjad-convert/package.json)
          echo "üî¢ Package version: $PACKAGE_VERSION"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: validate tag name
        run: |
          if [[ ! $TAG_NAME =~ ^v([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)-next\.([0-9]|[1-9][0-9]*)$ ]]; then
              echo "‚ùå Invalid tag name: $TAG_NAME not suitable for next tag publish"
              exit 1
          else
              echo "‚úÖ Valid tag name: $TAG_NAME"
          fi
      - name: validate version in package.json
        run: |
          if [[ ! $PACKAGE_VERSION =~ ^([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)-next\.([0-9]|[1-9][0-9]*)$ ]]; then
              echo "‚ùå Invalid version name: $PACKAGE_VERSION not suitable for next tag publish"
              exit 1
          else
              echo "‚úÖ Valid @next version: $PACKAGE_VERSION"
          fi
      - name: check if version in package.json is matching tag name
        run: |
          if [[ "v$PACKAGE_VERSION" != $TAG_NAME ]]; then
              echo "‚ùå Version in package.json of $PACKAGE_NAME: $PACKAGE_VERSION is not matching with tag name: $TAG_NAME"
              exit 1
          else
              echo "‚úÖ Version: $PACKAGE_VERSION in package.json of $PACKAGE_NAME is matching with tag name: $TAG_NAME"
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org
          always-auth: true
          cache: yarn

      - run: yarn workspace abjad-convert install --frozen-lockfile

      - name: publish abjad-convert @next to npm
        run: yarn workspace abjad-convert publish --access public --no-git-tag-version --new-version $PACKAGE_VERSION --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ABJAD_CONVERT_PUBLISH_AUTH_TOKEN }}
